{
  "paths": {
    "/realtors/": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Realtor"
                  }
                }
              }
            },
            "headers": {
              "X-Pagination": {
                "description": "Pagination metadata",
                "schema": {
                  "$ref": "#/components/schemas/PaginationMetadata"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "500": {}
        },
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1
            }
          },
          {
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10,
              "minimum": 1,
              "maximum": 100
            }
          }
        ],
        "summary": "Get all the realtors",
        "description": "Returns a list of realtors",
        "operationId": "getRealtors",
        "tags": ["realtors"]
      }
    },
    "/realtors/{realtor_id}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Realtor"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "404": {
            "description": "Realtor not found"
          },
          "500": {}
        },
        "summary": "Get realtor by ID",
        "description": "Returns a dictionnary with realtor information (id, title, ...),\n404 if realtor is not found",
        "operationId": "getRealtorById",
        "tags": ["realtors"]
      },
      "parameters": [
        {
          "in": "path",
          "name": "realtor_id",
          "required": true,
          "schema": {
            "type": "integer",
            "minimum": 0
          }
        }
      ]
    },
    "/realtors/{realtor_id}/messages/": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["id:asc", "id:desc", "date:asc", "date:desc"]
            }
          },
          {
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1
            }
          },
          {
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10,
              "minimum": 1,
              "maximum": 100
            }
          }
        ],
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Message"
                  }
                }
              }
            },
            "headers": {
              "X-Pagination": {
                "description": "Pagination metadata",
                "schema": {
                  "$ref": "#/components/schemas/PaginationMetadata"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "404": {
            "description": "Realtor not found"
          },
          "500": {}
        },
        "summary": "Get all the messages of one realtor",
        "description": "Returns a list of messages of one realtor.\n404 if realtor is not found",
        "operationId": "getMessagesByRealtorId",
        "tags": ["messages"]
      },
      "parameters": [
        {
          "in": "path",
          "name": "realtor_id",
          "required": true,
          "schema": {
            "type": "integer",
            "minimum": 0
          }
        }
      ]
    },
    "/realtors/{realtor_id}/messages/{message_id}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "404": {
            "description": "Realtor or Message not found"
          },
          "500": {}
        },
        "summary": "Get one message by ID.",
        "description": "Returns a single message\n404 if realtor is not found\n404 if message is not found",
        "operationId": "getMessageByIds",
        "tags": ["messages"]
      },
      "patch": {
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "404": {
            "description": "Realtor or Message not found"
          },
          "500": {}
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Message"
              }
            }
          }
        },
        "summary": "Update a message attribute.",
        "description": "Mark a message as read and returns the message representation,\n404 if message is not found.\n404 if realtor is not found.",
        "operationId": "updateMessage",
        "tags": ["messages"]
      },
      "parameters": [
        {
          "in": "path",
          "name": "message_id",
          "required": true,
          "schema": {
            "type": "integer",
            "minimum": 0
          }
        },
        {
          "in": "path",
          "name": "realtor_id",
          "required": true,
          "schema": {
            "type": "integer",
            "minimum": 0
          }
        }
      ]
    }
  },
  "info": {
    "title": "MA-Frontend-Demo",
    "version": "v1"
  },
  "tags": [
    {
      "name": "realtors",
      "description": "Operations on realtors"
    },
    {
      "name": "messages",
      "description": "Operations on messages"
    }
  ],
  "openapi": "3.0.2",
  "components": {
    "schemas": {
      "Realtor": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "unread_messages": {
            "type": "integer"
          },
          "logo": {
            "type": "string"
          }
        }
      },
      "PaginationMetadata": {
        "type": "object",
        "properties": {
          "total": {
            "type": "integer"
          },
          "total_pages": {
            "type": "integer"
          },
          "first_page": {
            "type": "integer"
          },
          "last_page": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          },
          "previous_page": {
            "type": "integer"
          },
          "next_page": {
            "type": "integer"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "description": "Error code"
          },
          "message": {
            "type": "string",
            "description": "Error message"
          },
          "errors": {
            "type": "object",
            "description": "Errors"
          },
          "status": {
            "type": "string",
            "description": "Error name"
          }
        }
      },
      "Contact": {
        "type": "object",
        "properties": {
          "firstname": {
            "type": "string"
          },
          "lastname": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "phone": {
            "type": "string",
            "pattern": "^[0-9]{10}$"
          }
        }
      },
      "Message": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "body": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "subject": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "contact": {
            "$ref": "#/components/schemas/Contact"
          },
          "read": {
            "type": "boolean"
          }
        }
      }
    },
    "responses": {
      "DEFAULT_ERROR": {
        "description": "Default error response",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "UNPROCESSABLE_ENTITY": {
        "description": "Unprocessable Entity",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      }
    }
  }
}
